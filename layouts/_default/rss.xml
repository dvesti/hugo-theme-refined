<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>
            {{/*
            If the page's .Title exists AND if it is not the same as the site's title,
            set the title to

            "Subsection title" on "My site title"

            else, just

            "My site title"
            */}}
            {{- with .Title -}}
                {{- if (not (eq . $.Site.Title)) }}
                    {{ . }} on
                {{ end }}
            {{ end }}
            {{ .Site.Title -}}
        </title>
        <link>{{ .Permalink }}</link>
        <description>Recent content {{ with .Title }}{{ if (not (eq . $.Site.Title)) }} in {{ . }}{{ end }}{{ end }}
            on {{ .Site.Title }}</description>
        {{ with .Site.LanguageCode }}<language>{{ . }}</language>{{ end }}
        {{ with .Site.Copyright }}<copyright>{{ . }}</copyright>{{end}}
        {{- with .Site.Author.name -}}
            {{ if $.Site.Author.email }}
                <managingEditor>{{ printf "%s (%s)" $.Site.Author.email . }}</managingEditor>
                <webMaster>{{ printf "%s (%s)" $.Site.Author.email . }}</webMaster>
            {{- else -}}
                <managingEditor>{{ . }}</managingEditor>
                <webMaster>{{ . }}</webMaster>
            {{- end -}}
        {{- end -}}
        <lastBuildDate>{{ now.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</lastBuildDate>
        <generator>Hugo -- gohugo.io</generator>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        {{- with .OutputFormats.Get "RSS" -}} <!-- Here, the Get is case-insensitive. -->
            <atom:link href="{{ .Permalink }}" rel="self" type="{{ .MediaType.Type }}" />
        {{- end -}}
        {{ range first 15 (where .Pages "Type" "in" .Site.Params.mainSections) }}
            {{ $page := . }}
            <item>
                <title>{{ .Title }}</title>
                <link>{{ .Permalink }}</link>
                {{ $description1 := .Description | default "" }}
                {{ $description := (cond (eq "" $description1) "" (printf "<blockquote>%s</blockquote>" ($description1 | markdownify))) }}
                <description>{{ printf "%s%s" $description .Content | html }}</description>
                {{ with .Params.author -}}
                    {{- range . -}} <!-- Assuming the author front-matter to be a list -->
                        <author>{{ printf "%s@fakeEmailToMakeValidatorHappy.com (%s)" (. | replaceRE " " ".") . }}</author>
                    {{- end -}}
                {{- end }}
                {{ with .Site.Taxonomies }}
                    {{ range $taxo,$_ := . }} <!-- Defaults taxos: "tags", "categories" -->
                        {{ with $page.Param $taxo }}
                            {{ $taxo_list := . }} <!-- $taxo_list will be the tags/categories list -->
                            {{ with $.Site.GetPage (printf "/%s" $taxo) }}
                                {{ $taxonomy_page := . }}
                                {{ range $taxo_list }} <!-- Below, assuming pretty URLs -->
                                    <category domain="{{ printf "%s%s" $taxonomy_page.Permalink (. | urlize) }}">{{ . }}</category>
                                {{ end }}
                            {{ end }}
                        {{ end }}
                    {{ end }}
                {{ end }}
                <guid>{{ .Permalink }}</guid>
                {{ if (not .Date.IsZero) }}<pubDate>{{ .Date.Format "Mon, 02 Jan 2006 15:04:05 -0700" | safeHTML }}</pubDate>{{ end }}
            </item>
        {{ end }}
    </channel>
</rss>

<!--
     Local Variables:
     mode: web
     web-mode-minor-engine: hugo
     End:
-->
